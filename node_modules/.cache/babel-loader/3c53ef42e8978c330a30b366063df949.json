{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/clee/Desktop/Projects/netflix-clone/src/components/Navbar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport \"./Navbar.css\";\n\nfunction Navbar() {\n  _s();\n\n  // create a state for the navbar scroll function \n  const [show, handleShow] = useState(false); // add a scroll listener to display the navbar background color\n\n  useEffect(() => {\n    window.addEventListener(\"scroll\", () => {\n      if (window.scrollY > 100) {\n        handleShow(true);\n      } else handleShow(false);\n    });\n    return () => {\n      window.removeEventListener(\"scroll\");\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `nav ${show && \"nav__black\"}`,\n    children: [\"            \", /*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"nav__logo\",\n      src: \"https://upload.wikimedia.org/wikipedia/commons/0/08/Netflix_2015_logo.svg\",\n      alt: \"Netflix Logo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"nav__avatar\",\n      src: \"https://mir-s3-cdn-cf.behance.net/project_modules/disp/84c20033850498.56ba69ac290ea.png\",\n      alt: \"Netflix avatar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Navbar, \"MHfZsD0XXVtxKh+9nAuBK2pBIVw=\");\n\n_c = Navbar;\nexport default Navbar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"sources":["/Users/clee/Desktop/Projects/netflix-clone/src/components/Navbar.js"],"names":["React","useState","useEffect","Navbar","show","handleShow","window","addEventListener","scrollY","removeEventListener"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,cAAP;;AAEA,SAASC,MAAT,GAAkB;AAAA;;AAEd;AACA,QAAM,CAACC,IAAD,EAAOC,UAAP,IAAqBJ,QAAQ,CAAC,KAAD,CAAnC,CAHc,CAKd;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACZI,IAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkC,MAAM;AACpC,UAAID,MAAM,CAACE,OAAP,GAAiB,GAArB,EAA0B;AACtBH,QAAAA,UAAU,CAAC,IAAD,CAAV;AACH,OAFD,MAEOA,UAAU,CAAC,KAAD,CAAV;AACV,KAJD;AAKA,WAAO,MAAM;AACTC,MAAAA,MAAM,CAACG,mBAAP,CAA2B,QAA3B;AACH,KAFD;AAGH,GATQ,EASN,EATM,CAAT;AAWA,sBACI;AAAK,IAAA,SAAS,EAAG,OAAML,IAAI,IAAI,YAAa,EAA5C;AAAA,4CACI;AACI,MAAA,SAAS,EAAC,WADd;AAEI,MAAA,GAAG,EAAC,2EAFR;AAGI,MAAA,GAAG,EAAC;AAHR;AAAA;AAAA;AAAA;AAAA,YADJ,eAOI;AACI,MAAA,SAAS,EAAC,aADd;AAEI,MAAA,GAAG,EAAC,yFAFR;AAGI,MAAA,GAAG,EAAC;AAHR;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH;;GAhCQD,M;;KAAAA,M;AAkCT,eAAeA,MAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport \"./Navbar.css\";\n\nfunction Navbar() {\n\n    // create a state for the navbar scroll function \n    const [show, handleShow] = useState(false);\n\n    // add a scroll listener to display the navbar background color\n    useEffect(() => {\n        window.addEventListener(\"scroll\", () => {\n            if (window.scrollY > 100) {\n                handleShow(true);\n            } else handleShow(false);\n        });\n        return () => {\n            window.removeEventListener(\"scroll\");\n        };\n    }, []);\n\n    return (\n        <div className={`nav ${show && \"nav__black\"}`}>            {/* String Concatenation - if show state is true past 100px, we append the navblack class styling */}\n            <img   \n                className=\"nav__logo\"\n                src=\"https://upload.wikimedia.org/wikipedia/commons/0/08/Netflix_2015_logo.svg\"\n                alt=\"Netflix Logo\"\n            />\n\n            <img \n                className=\"nav__avatar\"\n                src=\"https://mir-s3-cdn-cf.behance.net/project_modules/disp/84c20033850498.56ba69ac290ea.png\"\n                alt=\"Netflix avatar\"\n            />\n        </div>\n    )\n}\n\nexport default Navbar\n"]},"metadata":{},"sourceType":"module"}